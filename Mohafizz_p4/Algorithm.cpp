/*
 *	Developed by Mohamed Hafiz a1674846
 *	Bachelor of Computer Science, University of Adelaide
 */

#include "Algorithm.h"
#include "lib.h"

/*************************************************/
/*               Class Definitions               */
/*************************************************/

/* constructor */
Algorithm::Algorithm() {}

vector<int> Algorithm::storeRandom(unsigned int s)
{
	srand(time(NULL));				//Seed initialized to give a random number each time
	unsigned int inum[s];			//to store the random numbers generated by rand()

	vector<int> v;					//store the random numbers in a vector
	for(int i=0; i < s; i++)
	{
		 inum[i] = rand() % 100 + 1; // generate a random number between 1 to 100
		 v.push_back(inum[i]);
	}
	randomVariables = v;
	return randomVariables;
}

int Algorithm::generateKey(vector <int>& v)
{
	int index;
	srand(time(NULL));				//Seed initialized to give a random number each time
	index = rand() % v.size();		//generate a number of 0 to size of vector v - 1
	return index;
}

vector <int> Algorithm::getrandomVariables()
{
	return randomVariables;
}

int Algorithm::getCompCounter()
{
	return compCounter;
}

int Algorithm::getcopyCounter()
{
	return copyCounter;
}

void Algorithm::resetCompCounter()
{
	compCounter = 0;
}

void Algorithm::resetcopyCounterer()
{
	copyCounter = 0;
}




